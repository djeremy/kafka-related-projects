sourceSets {
    unitTest {
        kotlin.srcDir "$projectDir/tests/unit/kotlin"
        resources.srcDir "$projectDir/tests/unit/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.unitTest.kotlin.srcDirs
    }
}

configurations {
    unitTestImplementation.extendsFrom testImplementation
    unitTestRuntime.extendsFrom testRuntime
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.1"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spekVersion"
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:2.7.0'
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.10"
    testImplementation 'io.mockk:mockk:1.4.1'
    testImplementation 'org.assertj:assertj-core:3.20.2'
}

task unitTest(type: Test) {
    description = "Unit Tests"
    group = "verification"

    testClassesDirs = sourceSets.unitTest.output.classesDirs
    classpath = sourceSets.unitTest.runtimeClasspath

    useJunitPlatform {
        includeEngines 'spek2'
    }

    testLogging {
        events = ["started", "passed", "skipped", "failed"]
        showStandardStreams = false
        showExceptions = true
        showCauses = true
        showStackTraces = true
        exceptionFormat = "FULL"
    }
}

test.dependsOn(unitTest)
